/**
 * boilw v0.0.1
 * @author Vu Pham
 * @homepage https://github.com/vuquangpham/boilw
 * @license MIT 2023
 */
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var s=t();for(var n in s)("object"==typeof exports?exports:e)[n]=s[n]}}(this,(()=>(()=>{"use strict";var e={r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};function s(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:"")+Date.now().toString(36)+Math.random().toString(36).slice(2)}e.r(t);class n{constructor(){this.callbacks={}}on(e,t){if(void 0===e||""===e)return console.warn("Wrong names"),!1;if("function"!=typeof t)return console.warn("Wrong callback"),!1;return this.resolveNames(e).forEach((e=>{this.callbacks[e]instanceof Array||(this.callbacks[e]=[]),this.callbacks[e].push(t)})),this}off(e){if(void 0===e||""===e)return console.warn("Wrong name"),!1;return this.resolveNames(e).forEach((e=>{this.callbacks[e]&&this.callbacks[e]instanceof Array&&delete this.callbacks[e]})),this}trigger(e,t){if(void 0===e||""===e)return console.warn("Wrong name"),!1;const s=t instanceof Array?t:[];this.resolveNames(e).forEach((e=>{const t=this.callbacks[e];t&&t.forEach((e=>{e.apply(this,s)}))}))}resolveNames(e){let t=e;return t=t.replace(/[^a-zA-Z0-9 ,/.]/g,""),t=t.replace(/[,/]+/g," "),t.split(" ")}}const r="instance-enabled";const i=class{constructor(){this.instances=[]}add(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:s();if(!e||!t||!n)return console.error("The input parameters don't exist. Please check it again!"),null;const i={target:e,name:t,handler:n,id:r};i.target.addEventListener(i.name,i.handler),this.instances.push(i)}destroy(e){const t=this.instances.findIndex((t=>t.id===e));if(-1===t)return null;const s=this.instances[t];return s.target.removeEventListener(s.name,s.handler),this.instances.splice(t,1),s}destroyAll(){this.instances.forEach((e=>{e.target.removeEventListener(e.name,e.handler)})),this.instances=[]}};class a{constructor(e){return this.options=e,this.target=e.target,this.target.classList.contains(r)?(console.error("The target has already initialized!"),null):(this.hasInitialized=((t=this).id=t.options.id,!0),this.hasInitialized?(this.events=new n,this.listeners=new i,void this.target.classList.add(r)):null);var t}on(e,t){this.events.on(e,t)}destroy(){return this.listeners.destroyAll(),this.target.classList.remove(r),Library.destroy(this)}}return window.Library=new class{constructor(){this.instances=[]}create(e){const t={id:s(),target:null,...e};if(t.target=function(e){let t="Target element not found! Please use correct DOM element!";return"string"==typeof e&&(e=document.querySelector(e),t="Target string is not valid! Please use correct CSS selector!"),e||(console.error(t),!1)}(t.target),!t.target)return null;const n=new a(t);return n?(this.instances.push(n),n):null}get(e){return this.instances.find((t=>t.id===e))}destroy(e){const t=t=>t.id===e.id;if(!this.instances.find(t))return!1;const s=this.instances.findIndex(t);return this.instances.splice(s,1),!0}},t})()));